<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>金洋</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="blog.cosher.cn/"/>
  <updated>2020-03-05T09:14:31.330Z</updated>
  <id>blog.cosher.cn/</id>
  
  <author>
    <name>金洋</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring ico</title>
    <link href="blog.cosher.cn/2020/03/05/Spring/spring%E4%B8%AD%E7%9A%84ioc/"/>
    <id>blog.cosher.cn/2020/03/05/Spring/spring%E4%B8%AD%E7%9A%84ioc/</id>
    <published>2020-03-05T08:10:56.136Z</published>
    <updated>2020-03-05T09:14:31.330Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;ioc简介&quot;&gt;&lt;a href=&quot;#ioc简介&quot; class=&quot;headerlink&quot; title=&quot;ioc简介&quot;&gt;&lt;/a&gt;ioc简介&lt;/h3&gt;&lt;p&gt;控制反转（IoC，Inversion of Control），是一种思想。指的是将创建对象的操作权交给容器（例如spring）
    
    </summary>
    
    
      <category term="Spring" scheme="blog.cosher.cn/categories/Spring/"/>
    
    
      <category term="Java" scheme="blog.cosher.cn/tags/Java/"/>
    
      <category term="Spring" scheme="blog.cosher.cn/tags/Spring/"/>
    
      <category term="控制反转" scheme="blog.cosher.cn/tags/%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC/"/>
    
      <category term="后端框架" scheme="blog.cosher.cn/tags/%E5%90%8E%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>Spring ico</title>
    <link href="blog.cosher.cn/2020/03/05/Spring/%E4%B8%89%E7%A7%8D%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
    <id>blog.cosher.cn/2020/03/05/Spring/%E4%B8%89%E7%A7%8D%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</id>
    <published>2020-03-05T07:30:25.130Z</published>
    <updated>2020-03-05T09:57:32.087Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;工厂模式&quot;&gt;&lt;a href=&quot;#工厂模式&quot; class=&quot;headerlink&quot; title=&quot;工厂模式&quot;&gt;&lt;/a&gt;工厂模式&lt;/h1&gt;&lt;h2 id=&quot;什么是工厂模式&quot;&gt;&lt;a href=&quot;#什么是工厂模式&quot; class=&quot;headerlink&quot; title=&quot;什么是工厂模式&quot;&gt;&lt;/a&gt;什么是工厂模式&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;工厂模式（Factory Pattern）是 Java 中最常用的设计模式之一。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。
    
    </summary>
    
    
      <category term="Java" scheme="blog.cosher.cn/categories/Java/"/>
    
    
      <category term="Java" scheme="blog.cosher.cn/tags/Java/"/>
    
      <category term="工厂模式" scheme="blog.cosher.cn/tags/%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="设计模式" scheme="blog.cosher.cn/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Spring</title>
    <link href="blog.cosher.cn/2020/03/05/Spring/java%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E9%9D%99%E6%80%81%E4%BB%A3%E7%90%86%E5%92%8C%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/"/>
    <id>blog.cosher.cn/2020/03/05/Spring/java%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E9%9D%99%E6%80%81%E4%BB%A3%E7%90%86%E5%92%8C%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/</id>
    <published>2020-03-05T07:22:10.419Z</published>
    <updated>2020-03-05T09:11:16.056Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;代理模式简介&quot;&gt;&lt;a href=&quot;#代理模式简介&quot; class=&quot;headerlink&quot; title=&quot;代理模式简介&quot;&gt;&lt;/a&gt;代理模式简介&lt;/h3&gt;&lt;p&gt;代理模式（proxy）指的是为一个对象提供一个代理以控制外界对该对象的访问，比如有些情况下对
    
    </summary>
    
    
      <category term="Java" scheme="blog.cosher.cn/categories/Java/"/>
    
    
      <category term="Java" scheme="blog.cosher.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Spring 简介</title>
    <link href="blog.cosher.cn/2020/03/05/Spring/%E7%AE%80%E4%BB%8B/"/>
    <id>blog.cosher.cn/2020/03/05/Spring/%E7%AE%80%E4%BB%8B/</id>
    <published>2020-03-05T06:58:31.364Z</published>
    <updated>2020-03-05T08:08:20.384Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Spring&quot;&gt;&lt;a href=&quot;#Spring&quot; class=&quot;headerlink&quot; title=&quot;Spring&quot;&gt;&lt;/a&gt;Spring&lt;/h1&gt;&lt;h3 id=&quot;spring简介&quot;&gt;&lt;a href=&quot;#spring简介&quot; class=&quot;headerlink&quot; title=&quot;spring简介&quot;&gt;&lt;/a&gt;spring简介&lt;/h3&gt;&lt;p&gt;Spring 是于 2003 年兴起的一个轻量级的Java 开发框架，创始人是Rod Johnson，它是为了解决企业应用开发的复杂性而创建的
    
    </summary>
    
    
      <category term="Spring" scheme="blog.cosher.cn/categories/Spring/"/>
    
    
      <category term="Java" scheme="blog.cosher.cn/tags/Java/"/>
    
      <category term="Spring" scheme="blog.cosher.cn/tags/Spring/"/>
    
      <category term="后端框架" scheme="blog.cosher.cn/tags/%E5%90%8E%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>Spring</title>
    <link href="blog.cosher.cn/2020/03/05/Spring/index/"/>
    <id>blog.cosher.cn/2020/03/05/Spring/index/</id>
    <published>2020-03-05T05:38:05.160Z</published>
    <updated>2020-03-05T09:16:20.706Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Spring-目录&quot;&gt;&lt;a href=&quot;#Spring-目录&quot; class=&quot;headerlink&quot; title=&quot;Spring 目录&quot;&gt;&lt;/a&gt;Spring 目录&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Spring 是于 2003 年兴起的一个轻量级的Java 开发框架，创始人是Rod Johnson，它是为了解决企业应用开发的复杂性而创建的
    
    </summary>
    
    
      <category term="Spring" scheme="blog.cosher.cn/categories/Spring/"/>
    
    
      <category term="Java" scheme="blog.cosher.cn/tags/Java/"/>
    
      <category term="Spring" scheme="blog.cosher.cn/tags/Spring/"/>
    
      <category term="后端框架" scheme="blog.cosher.cn/tags/%E5%90%8E%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
</feed>
